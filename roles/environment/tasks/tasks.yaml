---
# tasks file for environment
- name: Set up ssh config
  block:
    - name: Set up .ssh/config
      copy:
        src: ssh_config
        dest: ~/.ssh/config
    - name: Create Control Master Directory
      file:
        path: ~/.ssh/cm_temp
        state: directory
        mode: u=rwx,g=rwx,o=
  become: no
  tags: ssh

- name: Install git
  apt:
    name: git
    state: latest
  tags: git

- name: Install and setup tmux
  block:
    - name: Install tmux
      apt:
        name: tmux
        state: present
    - name: Configure tmux
      copy:
        src: tmux.conf
        dest: ~/.tmux.conf
      become: no
  tags: tmux

- name: Setup python requirements
  block:
    - name: Install packages for compiling python
      apt:
        name:
          - 'build-essential'
          - 'curl'
          - 'libssl-dev'
          - 'libbz2-dev'
          - 'libffi-dev'
          - 'liblzma-dev'
          - 'libncurses5-dev'
          - 'libreadline-dev'
          - 'libsqlite3-dev'
          - 'libxml2-dev'
          - 'libxmlsec1-dev'
          - 'llvm'
          - 'bc'
          - 'make'
          - 'tk-dev'
          - 'wget'
          - 'xz-utils'
          - 'zlib1g-dev'
        state: present
      tags: pyenv

- name: Install zsh and oh-my-zsh
  block:
    - name: Install zsh
      apt:
        name: zsh
        state: latest
      tags: zsh
    - name: Install oh-my-zsh
      block:
        - name: Download oh-my-zsh install script
          get_url:
            url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
            dest: /tmp/install_ohmyzsh.tmp
            mode: u=rwx,g=r,o=r
        - name: Run oh-my-zsh install script
          shell:
            cmd: /tmp/install_ohmyzsh.tmp
            creates: ~/.oh-my-zsh
        - name: Install plugins
          block:
            # - name: Install powerlevel 10k
            #   git:
            #     repo: https://github.com/romkatv/powerlevel10k.git
            #     dest: ~/.oh-my-zsh/custom/themes/powerlevel10k
            - name: Install zsh autosuggestions
              git:
                repo: https://github.com/zsh-users/zsh-autosuggestions
                dest: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
            - name: Install zsh syntax highlighting
              git:
                repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
                dest: ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
        - name: Install .zshrc and .zshenv
          block:
            - name: Install .zshrc
              copy:
                src: zshrc
                dest: ~/.zshrc
                mode: u=rw,g=,o=
            - name: Install .zshenv
              copy:
                src: zshenv
                dest: ~/.zshenv
                mode: u=rw,g=,o=
            - name: Install global zshenv
              copy:
                src: zshenv.global
                dest: /etc/zsh/zshenv
                mode: u=rw,g=r,o=r
              become: yes
          tags: zshenv
      become: no
      tags: ohmyzsh

# - name: Download and Install redis
#   vars:
#     version: "7.2.2"
#     checksum: "sha256:ca999be08800edc6d265379c4c7aafad92f0ee400692e4e2d69829ab4b4c3d08"
#   block:
#     - name: Download redis
#       get_url:
#         url: http://download.redis.io/releases/redis-{{ version }}.tar.gz
#         dest: ~{{ ansible_user_id }}/Downloads/redis-{{ version }}.tar.gz
#         checksum: "{{ checksum }}"
#     - name: Uncompress redis
#       unarchive:
#         src: ~{{ ansible_user_id }}/Downloads/redis-{{ version }}.tar.gz
#         dest: /tmp
#         creates: /tmp/redis-{{ version }}
#     - name:
#       lineinfile:
#         path: /tmp/redis-{{ version }}/src/Makefile
#         regex: "^PREFIX?=/usr/local$"
#         line: "PREFIX=/opt/redis/{{ version }}"
#     - name: Compile redis
#       make:
#         chdir: /tmp/redis-{{version}}
#         params:
#           USE_SYSTEMD: "yes"
#     - name: Install redis
#       make:
#         chdir: /tmp/redis-{{version}}
#         target: install
#       become: yes
#     - name: Add redis to PATH
#       lineinfile:
#         path: "{{ item }}"
#         state: present
#         line: "export PATH=$PATH:/opt/redis/{{ version }}/bin"
#         regexp: '^export PATH=$PATH:/opt/redis/{{ version }}/bin$'
#       loop:
#         - /etc/zsh/zprofile
#         - /etc/profile
#       become: yes
#     - name : Configure current redis
#       file:
#         src: /opt/redis/{{ version }}
#         dest: /opt/redis/current
#         state: link
#       become: yes
#     - name: Create redis group
#       group:
#         name: redis
#         system: yes
#       become: yes
#     - name: Create redis user
#       user:
#         name: redis
#         group: redis
#         create_home: no
#         system: yes
#       become: yes
#     - name: Set up redis directories
#       file:
#         path: "{{ item }}"
#         state: directory
#         mode: o=rwx,g=rx,o=rx
#         owner: redis
#         group: redis
#       loop:
#         - /etc/redis
#         - /var/redis
#         - /var/redis/6379
#       become: yes
#     - name: Configure redis
#       block:
#         - name: Copy redis config across
#           copy:
#             src: redis.conf
#             dest: /etc/redis/6379.conf
#             owner: redis
#             group: redis
#         - name: copy init script across
#           copy:
#             src: redis.service
#             dest: /etc/systemd/system/redis.service
#             owner: redis
#             group: redis
#       become: yes
#     - name: Add redis to default runlevel and start
#       service:
#         name: redis
#         state: started
#         enabled: yes
#       become: yes
#   become: no
#   tags: redis


- name: Install miscelleous configuration files
  block:
    - name: Add .gitconfig
      tags: gitconfig
      become: no
      copy:
        src: gitconfig
        dest: ~/.gitconfig
    - name: Add .vimrc
      tags: vimrc
      become: no
      copy:
        src: .vimrc
        dest: ~/.vimrc

    # - name: Ensure kitty config dir exists
    #   tags: kitty
    #   become: no
    #   file:
    #     path: ~/.config/kitty
    #     state: directory
    # - name: Add kitty.config
    #   tags: kitty
    #   become: no
    #   copy:
    #     src: kitty.conf
    #     dest: ~/.config/kitty/kitty.conf
